add2 <- function(x,y) {
x+y
}
add2(3,7)
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, 10){
use <- x > n
x[use]
}
abovw(x)
above(x)
above <- function(x, 10){
use <- x > n
x[use]
}
above <- function(x, 10){
use <- x > 12
x[use]
}
use <- x > n
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
means
}
columnmean(airquality)
columnmean(airquality)
columnmean(Ozone)
columnmean <- function(y) {
+     nc <- ncol(y)
+     means <- numeric(nc)
+     for(i in 1:nc) {
+         means[i] <- mean(y[, i])
}
means
}
columnmean(ozone)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(ozone)
}
columnmean(ozone)
columnmean(HW)
columnmean(HW.csv)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(HW)
columnmean(HW.csv)
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
id <- as.integer(id)
pollutant <- as.character(pollutant)
directory <- as.character(directory)
setwd(paste("/Desktop/",directory, sep= ""))
x <-c()
for (i in id) {
if (i < 10){
z <-paste("00", i, sep="")
}else if (10 <= i && i < 100){
z <- paste(0, i, sep ="")
}else {
z <- as.character(i)
}
data <- read.csv(paste(z, ".csv", sep =""))
if (pollutant == "sulfate"){
y <- c(data[,2])
} else if (pollutant == "nitrate") {
y <- c(data[,3])
}
x <- c(x, y)
}
mean_data <- mean (x, na.rm = TRUE)
round(mean_data, 3)
}
if(x>3) {
y <- 10
} else {
y <- 0
}
if(x>3) {
10
} else {
0
}
for(i in 1:10) {}
for(i in 1:10) {
print(i)
}
x <- 1,2,3,4,5,20,25,30
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin = 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
for(i in 1:100) {
if(i <= 20) {
next
}
}
i
for(i in 1:100) {
if(i <= 20) {
## Skip the first 20 iterations
next
}
## Do something here
}
i
add2 <- function(x, y) {
x + y
}
add2
x <- 1,3,5,7,9
y <- 2,4,6,8,10
add2 <- function(x, y) {
x + y
}
x <- 5
y <- 8
add2 <- function(x, y) {
x + y
}
add2
x + y
x <- 1:10
y <- 20:30
add2 <- function(x, y) {
x + y
}
x + y
x -> 1:20
above10 <- function(x) {
use <- x > 10
x[use]
}
x <- 1:20
above10 <- function(x) {
use <- x > 10
x[use]
}
above10
x[use]
x <- 1:10
n <- 5:15
above <- function(x, n) {}
above <- function(x, n) {}
x <- 1:10
n <- 15:20
above <- function(x, n) { }
x <- 1:10
n <- 15:25
above <- function(x, n) {
use <- x > n
x[use]
}
x[use]
x <- 15:25
n <- 1:10
above <- function(x, n) {
use <- x > n
x[use]
}
x[use]
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n=2) {
use <- x > n
x[use]
}
x[use]
above <- function(x, 10) {
use <- x > n
x[use]
}
above <- function(x, n=10) {
use <- x > n
x[use]
}
above(x)
setwd("~/datasciencecoursera")
sulfatemean <- function(sulfate) {
nc <- ncol(sulfate)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(sulfate[, i])
}
means
}
sulfatemean
sulfatemean(sulfate)
columnmean <- function(y) {
+ nc <- ncol(y)
+ means <- numeric(nc)
+ for(i in 1:nc) {
+ means[i] <- mean(y[, i])
+ }
+ means
+ }
> sulfatemean <- function(sulfate) {
+ nc <- ncol(sulfate)
+ means <- numeric(nc)
+ for(i in 1:nc) {
+ means[i] <- mean(sulfate[, i])
+ }
+ means
+ }
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(sulfate)
columnmean(001.csv)
columnmean(specdata)
> columnmean <- function(y, removeNA = TRUE) {
+     nc <- ncol(y)
+     means <- numeric(nc)
+     for(i in 1:nc) {
+         means[i] <- mean(y[, i], na.rm = removeNA)
+     }
+     means
+ }
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
column(001)
columnmean(001)
columnmean(sulfate)
columnmean("sulfate")
columnmeans(HW)
columnmean(HW)
columnmean("HW")
columnmean(HW)
detach("package:datasets", unload=TRUE)
columnmean(HW)
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
columnmean("ozone")
columnmean("ozone")
coumnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmeans(HW)
columnmean(HW)
columnmean("HW")
columnmean <- function(y, removeNA = TRUE) {
z <- ncol(y)
means <- numeric(z)
for(i in 1:z) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean("HW")
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
z <- ncol(y)
means <- numeric(z)
for(i in 1:z) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmeans(airquality)
columnmean <- function(y, removeNA = TRUE) {
z <- ncol(y)
means <- numeric(z)
for(i in 1:z) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(y) {
z <- ncol(y)
means <- numeric(z)
for(i in 1:z) {
means[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
f <- function (a, b) {
a^2
}
f(8)
f <- function (a) {
a^2
}
f(8)
f <- function(a, b) {
print(a)
print(b)
}
f(60)
f <- function(a, b) {
+     print(a)
+     print(b)
+ }
f <- function(a, b) {
print(a)
print(b)
}
f(60,5)
myplot <- function(x, y, type = "1", ...) {
plot(x, y, type = type, ...)
}
myplot
x <- 1
y <- 5
myplot
mean
